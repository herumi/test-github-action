name: Release


permissions:
  contents: write
  repository-projects: write

concurrency:
  group: "release-${{ github.ref }}"
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'release/tag: vX.Y.Z'
        required: true
env:
  BRANCH_NAME: "release-${{ github.event.inputs.version }}"

jobs:
  create-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        run: |
          git checkout -b "$BRANCH_NAME"
          git submodule update --init --recursive

          git config user.name github-actions
          git config user.email github-actions@github.com
          git push --set-upstream origin "$BRANCH_NAME"

  build-linux:
    runs-on: ubuntu-latest
    needs: create-branch
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Checkout branch
        run: |
          git pull && git checkout "$BRANCH_NAME" && git pull
          git submodule update --init --recursive

      - name: Build linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        run: |
          make

          git config user.name github-actions
          git config user.email github-actions@github.com

          git add ./now.txt
          git commit -m "fix(release): added libs for linux"
          git branch -av
          git tag -f "$BRANCH_NAME"
          git push


  create-release:
    runs-on: ubuntu-latest
    needs: build-linux
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Checkout branch
        id: checkout_branch
        run: |
          git pull && git checkout "$BRANCH_NAME" && git pull
          git submodule update --init --recursive
          git branch -av
          git rev-parse HEAD
          echo "{commit_hash}=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "GITHUB_HEAD_REF" "$GITHUB_HEAD_REF"
          echo "tag" "${{ github.ref }}" # refs/heads/main
          echo "name" "${{ github.ref_name }}" # main
          find .

      - name: Create Release
        id: create_release
        uses: "softprops/action-gh-release@v1"
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
#          tag_name: "${{ github.ref_name }}" # main
          tag_name: "${{ github.ref }}" # refs/heads/main
#          tag_name: "$BRANCH_NAME" # main
          prerelease: false
          target_commitish: "${{ steps.create_release.outputs.commit_hash }}"
#          target_commitish: "${{ github.ref }}"
#          files: |
#            *.a
#            *.txt

  delete-branch:
    runs-on: ubuntu-latest
    needs: [ create-release ]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Delete branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git pull && git push origin -d "$BRANCH_NAME"

