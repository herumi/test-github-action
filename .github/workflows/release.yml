name: Release


permissions:
  contents: write
  repository-projects: write

concurrency:
  group: "release-${{ github.ref }}"
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'release/tag: vX.Y.Z'
        required: true
env:
  BRANCH_NAME: "release-${{ github.event.inputs.version }}"

jobs:
  create-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        run: |
          git checkout -b "$BRANCH_NAME"
          git submodule update --init --recursive

          git config user.name github-actions
          git config user.email github-actions@github.com
          git push --set-upstream origin "$BRANCH_NAME"

  build-linux:
    runs-on: ubuntu-latest
    needs: create-branch
    outputs:
      commit_hash: ${{ steps.build-linux.outputs.commit_hash }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Checkout branch
        run: |
          git pull && git checkout "$BRANCH_NAME" && git pull
          git submodule update --init --recursive

      - name: Build linux
        id: build-linux
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        run: |
          make

          git config user.name github-actions
          git config user.email github-actions@github.com

          git add ./now.txt
          git commit -m "fix(release): added libs for linux"
          git branch -av
          git rev-parse HEAD
          echo "commit_hash=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
          git push

  create-release:
    runs-on: ubuntu-latest
    needs: build-linux
    outputs:
      hash: ${{ steps.set-hash.outputs.hash }}
      hash2: ${{ steps.create-release.outputs.hash }}
      hash3: ${{ steps.create-release.outputs.hash }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set hash
        id: set-hash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        run: |
          git pull && git checkout "$BRANCH_NAME" && git pull
          git submodule update --init --recursive
          git branch -av
          git rev-parse HEAD
          echo "hash=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
          echo "hash3=$(git rev-parse HEAD)" >> "$GITHUB_ENV"
          git push
      - name: show
        run: |
         echo "hash1" "${{ needs.build-linux.outputs.commit_hash }}"
         echo "hash2" "${{ steps.create-release.outputs.hash }}"
         echo "hash3" "${{ steps.set-hash.outputs.hash }}"
         echo "hash4" "${{ env.hash3 }}"

      - name: Create Release
        id: create_release
        run: gh release create "release-${{ github.event.inputs.version }}" -t "${{ github.event.inputs.version }}" --target "${{ steps.set-hash.outputs.hash }}"
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  delete-branch:
    runs-on: ubuntu-latest
    needs: [ create-release ]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Delete branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git pull && git push origin -d refs/origin/"$BRANCH_NAME"

