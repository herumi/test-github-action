name: Release


permissions:
  contents: write
  repository-projects: write

concurrency:
  group: "release-${{ github.ref }}"
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'release/tag: vX.Y.Z'
        required: true


jobs:
  create-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        run: |
          git pull
          git checkout release 2>/dev/null || git checkout -b release
          rm -rf ./src/bls && mkdir -p ./src/bls
          git merge origin/master -q -m "chore(git): merged latest master"
          git submodule update --init --recursive

          git config user.name github-actions
          git config user.email github-actions@github.com
          git push --set-upstream origin release
  build-macos:
    runs-on: macos-13
    needs: create-branch
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.20

      - name: Build darwin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        run: |
          git pull && git checkout release
          git submodule update --init --recursive

          brew install nasm

          [ -d ./bls/lib/darwin/ ] && rm -rf ./bls/lib/darwin/
          make clean

          mkdir -p ./bls/lib/darwin/

          make ARCH=x86_64
          make clean
          make ARCH=arm64

          git config user.name github-actions
          git config user.email github-actions@github.com

          git add ./bls/lib/darwin/ -f

          changes=$(git diff --staged --numstat | wc -l)
          if [[ $changes -gt 0 ]]
          then
            git commit -m "fix(release): added libs for darwin"
            git push
          fi

  create-release:
    runs-on: ubuntu-latest
    needs: build-macos
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set hash
        id: set-hash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        run: |
          git pull && git checkout release
          git submodule update --init --recursive
          git branch -av
          git rev-parse HEAD
          echo "hash=$(git rev-parse HEAD)" >> "$GITHUB_ENV"

      - name: show
        run: |
         echo "hash" "${{ env.hash }}"

      - name: Create Release
        id: create_release
        run: gh release create "${{ github.event.inputs.version }}" -t "${{ github.event.inputs.version }}" --target "release" --latest
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
